order:
  name: orbilnot-order
  replicaCount: 1
  container:
    repository: glebegunov/orbilnot-order
    pullPolicy: IfNotPresent
    tag: "0.0.2"
  livenessProbe:
    httpGet:
      path: /orders/actuator/health
      port: 8000
    initialDelaySeconds: 60

billing:
  name: orbilnot-billing
  replicaCount: 1
  container:
    repository: glebegunov/orbilnot-billing
    pullPolicy: IfNotPresent
    tag: "0.0.3"
  livenessProbe:
    httpGet:
      path: /account/actuator/health
      port: 8000
    initialDelaySeconds: 60
    timeoutSeconds: 10

notification:
  name: orbilnot-notification
  replicaCount: 1
  container:
    repository: glebegunov/orbilnot-notification
    pullPolicy: IfNotPresent
    tag: "0.0.2"
  livenessProbe:
    httpGet:
      path: /notifications/actuator/health
      port: 8000
    initialDelaySeconds: 60

gateway:
  replicaCount: 1
  name: orbilnot-gateway
  container:
    repository: glebegunov/orbilnot-gateway
    pullPolicy: IfNotPresent
    tag: "0.0.2"
  service:
    type: ClusterIP
    port: 8080

kitchen:
  name: orbilnot-kitchen
  replicaCount: 1
  container:
    repository: glebegunov/orbilnot-kitchen
    pullPolicy: IfNotPresent
    tag: "0.0.2"
  livenessProbe:
    httpGet:
      path: /kitchen/actuator/health
      port: 8000
    initialDelaySeconds: 60

foodstuff:
  name: orbilnot-foodstuff
  replicaCount: 1
  container:
    repository: glebegunov/orbilnot-foodstuff
    pullPolicy: IfNotPresent
    tag: "0.0.2"
  livenessProbe:
    httpGet:
      path: /foodstuff/actuator/health
      port: 8000
    initialDelaySeconds: 60

service:
  port: 8000
  type: ClusterIP

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}


ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: arch.homework
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}

job:
  name: orbilnot-migration-job
  restartPolicy: Never
  image:
    repository: glebegunov/orbilnot-migration
    tag: 0.0.2
  pullPolicy: IfNotPresent

postgresql:
  fullnameOverride: orbilnot-postgresql
  auth:
    database: postgres
    username: postgres
    postgresPassword: qwerty
  # Values for the deployment of the configmap for the postgresql
  configmap:
    name: postgres-configmap


